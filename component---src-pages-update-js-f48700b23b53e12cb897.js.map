{"version":3,"sources":["webpack:///./src/components/Checkbox.js","webpack:///./src/components/CheckboxGroup.js","webpack:///./src/pages/update.js"],"names":["CheckboxStyled","styled","div","Checkbox","checkboxId","handleCheck","value","isChecked","useState","values","setValues","useEffect","style","fontSize","key","onChange","_","type","checked","CheckboxGroup","checkboxState","updateValues","newCheckboxDetail","newValues","map","checkBox","FormContainer","form","FullInput","input","FullTextArea","textarea","FullButton","button","OfferingContainer","UpdateListingPage","name","businessName","suburb","details","about","options","handleInputChange","e","target","updateCheckboxValues","checkboxGroup","SEO","title","description","onSubmit","console","log","preventDefault","display","flexDirection","htmlFor","width"],"mappings":"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","file":"component---src-pages-update-js-f48700b23b53e12cb897.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\n\nconst CheckboxStyled = styled.div`\n  list-style: none;\n  font-size: 1rem;\n`\n\nconst Checkbox = ({ checkboxId, handleCheck, value, isChecked }) => {\n  const [values, setValues] = useState({ checkboxId, handleCheck, isChecked })\n\n  useEffect(() => {\n    values.handleCheck({\n      checkboxId: values.checkboxId,\n      isChecked: values.isChecked,\n    })\n  }, [values])\n\n  const updateIsChecked = _ => {\n    setValues({ ...values, isChecked: !values.isChecked })\n  }\n\n  return (\n    <CheckboxStyled>\n      <input\n        style={{ fontSize: '2rem' }}\n        key={checkboxId}\n        onChange={updateIsChecked}\n        type=\"checkbox\"\n        checked={values.isChecked}\n        value={value}\n      />{' '}\n      {value}\n    </CheckboxStyled>\n  )\n}\n\nexport default Checkbox\n","import React, { useState, useEffect } from 'react'\nimport Checkbox from '../components/Checkbox'\n\nconst CheckboxGroup = ({ checkboxId, checkboxState, handleCheck }) => {\n  const [values, setValues] = useState({\n    checkboxId,\n    checkboxState,\n    handleCheck,\n  })\n\n  const updateValues = ({ checkboxId, value, isChecked }) => {\n    const newCheckboxDetail = {\n      isChecked: isChecked,\n      value: value,\n    }\n\n    const newValues = values.checkboxState\n    newValues[checkboxId] = newCheckboxDetail\n\n    setValues({ ...values, checkboxState: newValues })\n  }\n\n  useEffect(() => {\n    values.handleCheck({\n      checkboxId: values.checkboxId,\n      checkboxState: values.checkboxState,\n    })\n  }, [values])\n\n  return checkboxState.map(checkBox => {\n    return (\n      <Checkbox\n        key={checkBox.checkboxId}\n        checkboxId={checkBox.checkboxId}\n        value={checkBox.value}\n        isChecked={checkBox.isChecked}\n        handleCheck={updateValues}\n      ></Checkbox>\n    )\n  })\n}\n\nexport default CheckboxGroup\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport CheckboxGroup from '../components/CheckboxGroup'\nimport SEO from '../components/shared/SEO'\n\nconst FormContainer = styled.form`\n  max-width: 30rem;\n  margin: 0 auto;\n`\n\nconst FullInput = styled.input`\n  width: 100%;\n  padding: 0.5rem;\n  border-radius: 0.25rem;\n  margin: 0.25rem;\n  font-size: 1rem;\n  background-color: #f8f8f8;\n`\n\nconst FullTextArea = styled.textarea`\n  width: 100%;\n  padding: 0.5rem;\n  border-radius: 0.25rem;\n  margin: 0.25rem;\n  font-size: 1rem;\n  height: 120px;\n  background-color: #f8f8f8;\n`\n\nconst FullButton = styled.button`\n  width: 100%;\n  padding: 0.5rem;\n  border-radius: 0.25rem;\n  background-color: #f8f8f8;\n`\n\nconst OfferingContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n`\n\nconst UpdateListingPage = () => {\n  const [values, setValues] = useState({\n    name: '',\n    businessName: '',\n    suburb: '',\n    details: '',\n    about: '',\n    options: {},\n  })\n\n  const handleInputChange = e => {\n    const { name, value } = e.target\n    setValues({ ...values, [name]: value })\n  }\n\n  const handleSubmit = e => {\n    console.log(values)\n    e.preventDefault()\n  }\n\n  const updateCheckboxValues = checkboxGroup => {\n    const newValues = values.options\n    newValues[checkboxGroup.checkboxId] = checkboxGroup.checkboxState\n    setValues({ ...values, options: newValues })\n  }\n\n  const checkboxOfferings = [\n    { checkboxId: 0, value: 'Online', isChecked: false },\n    { checkboxId: 1, value: 'Delivery', isChecked: false },\n    { checkboxId: 2, value: 'Virtual', isChecked: false },\n    { checkboxId: 3, value: 'Credit', isChecked: false },\n  ]\n\n  const checkboxCategories = [\n    { checkboxId: 0, value: 'Retail', isChecked: false },\n    { checkboxId: 1, value: 'Hospitality', isChecked: false },\n    { checkboxId: 2, value: 'Services', isChecked: false },\n    { checkboxId: 3, value: 'Cafe', isChecked: false },\n    { checkboxId: 4, value: 'Other', isChecked: false },\n  ]\n\n  return (\n    <>\n      <SEO title=\"Update\" description=\"Update your business or offerings\" />\n      <FormContainer\n        onSubmit={handleSubmit}\n        style={{ display: 'flex', flexDirection: 'column' }}\n      >\n        <div>Please tell us about your business.</div>\n        <label htmlFor=\"businessName\">\n          <div>Business name</div>\n          <FullInput\n            type=\"text\"\n            name=\"businessName\"\n            value={values.businessName}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label htmlFor=\"name\">\n          <div>Your name</div>\n          <FullInput\n            type=\"text\"\n            name=\"name\"\n            value={values.name}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label htmlFor=\"suburb\">\n          <div>Suburb</div>\n          <FullInput\n            type=\"text\"\n            name=\"suburb\"\n            value={values.suburb}\n            onChange={handleInputChange}\n          />\n        </label>\n        <OfferingContainer>\n          <label htmlFor=\"offerings\">\n            <div>Offering</div>\n            <CheckboxGroup\n              name=\"offerings\"\n              style={{ width: '100%' }}\n              checkboxId=\"offerings\"\n              checkboxState={checkboxOfferings}\n              handleCheck={updateCheckboxValues}\n            />\n          </label>\n          <label htmlFor=\"categories\">\n            <div>Categories</div>\n            <CheckboxGroup\n              name=\"categories\"\n              checkboxId=\"categories\"\n              checkboxState={checkboxCategories}\n              handleCheck={updateCheckboxValues}\n            />\n          </label>\n        </OfferingContainer>\n\n        <label htmlFor=\"details\">\n          <div>Details</div>\n          <FullTextArea name=\"details\" onChange={handleInputChange} />\n        </label>\n        <label htmlFor=\"about\">\n          <div>About</div>\n          <FullTextArea name=\"about\" onChange={handleInputChange} />\n        </label>\n        <FullButton type=\"submit\" value=\"Submit\">\n          Submit\n        </FullButton>\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UpdateListingPage\n"],"sourceRoot":""}